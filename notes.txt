Magesh Kuppan

Schedule:
    Commence : T 
    Tea Break : T + 1:30 Hrs (20 mins)
    Lunch Break : T + 3:30 (Hrs) (1 Hr)
    Tea Break : T + 6:00 (Hrs) (20 mins)

Methodology:
    * No powerpoints
    * Problem solving

Repo:
    https://github.com/tkmagesh/Salesforce-Intermediate-Go-Jan-2023

Day-01
Refresher
    Pointers
    Error Handling
    Structs & Methods
    Interfaces
    Higher Order Functions

    Concurrency
        Concurrency


Higher Order Function
    1. Assign functions as values to variables
    2. Pass functions as arguments
    3. Return functions as return values


RPC
HTTP
    Standard Library
        Routing
        Serialize / Deserialize JSON
        Logging

    Routing Libraries
        Serialize / Deserialize JSON
        Logging
        
    Web Frameworks

    

GRPC
    Protocol Buffers
        Schema shared between the client and server
        ONLY send and receive data
    Communication Patterns
        Request / Response
        Client Streaming
        Server Streaming
        Bidirectional Streaming

    1. Protocol Buffers Compiler (protoc tool)
            Windows:
                Download the file, extract and keep in a folder (PATH) accessble through the command line
                https://github.com/protocolbuffers/protobuf/releases/download/v21.12/protoc-21.12-win64.zip
            Mac:
                brew install protobuf

            Verification:
                protoc --version

        2. Go plugins
            go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28
            go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2

    TODO:
        Protobuf Schema
            Service Contract
            Operation Contract
            Data Contract

        Generate the Proxy & Stub

        Implementing the Service
        Host the Service

     Generate Proxy & Stub
            protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative proto/service.proto


Testing
    "testing" package
    test runner
        go test
    Tests 
        = functions whose name starts with "Test"
    Test files
        names must end with "_test.go"

    Install gotest
        go install https://github.com/rakyll/gotest

    
    To install mockery
        go install github.com/vektra/mockery/v2@latest

    To generate mocks
        mockery --all --keeptree

    go test
    go test -run=<test_name>
    go test ./...
    
Benchmarking
    go test -bench=.
    go test -bench=. -benchtime=5s
    go test -bench=. -cpu=4